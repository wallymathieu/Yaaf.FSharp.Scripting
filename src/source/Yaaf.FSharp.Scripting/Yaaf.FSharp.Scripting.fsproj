<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFrameworks>net45;NETStandard2.0</TargetFrameworks>
    <ProjectGuid>2d4e0476-7d33-449b-b895-ff1caf9dd712</ProjectGuid>
    <OutputType>Library</OutputType>
    <RootNamespace>Yaaf.FSharp.Scripting</RootNamespace>
    <AssemblyName>Yaaf.FSharp.Scripting</AssemblyName>
    <!--<TargetFSharpCoreVersion>4.3.0.0</TargetFSharpCoreVersion>-->
    <Name>Yaaf.FSharp.Scripting</Name>
    <DefineConstants>YAAF_FSHARP_SCRIPTING_PUBLIC</DefineConstants>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <GenerateAssemblyTitleAttribute>false</GenerateAssemblyTitleAttribute>
    <GenerateAssemblyProductAttribute>false</GenerateAssemblyProductAttribute>
    <GenerateAssemblyDescriptionAttribute>false</GenerateAssemblyDescriptionAttribute>
    <GenerateAssemblyVersionAttribute>false</GenerateAssemblyVersionAttribute>
    <GenerateAssemblyConfigurationAttribute>false</GenerateAssemblyConfigurationAttribute>
    <GenerateAssemblyFileVersionAttribute>false</GenerateAssemblyFileVersionAttribute>
    <!-- TODO: Verify: -->
    <Summary>A helper library to easily add F# scripts to your application.</Summary>
    <!-- TODO: Verify: -->
    <Description>This library builds on top of the FSharp.Compiler.Service library and provides a nice API for F# script integration. It provides APIs to push values into and to get values from scripts. Additionally it adds some extension methods missing from the FSharp.Compiler.Service API.</Description>
    <Authors>Matthias Dittrich</Authors>
    <RepositoryUrl>https://github.com/matthid/Yaaf.FSharp.Scripting.git</RepositoryUrl>
    <PackageProjectUrl>https://github.com/matthid/Yaaf.FSharp.Scripting</PackageProjectUrl>
    <PackageTags>fsharp scripting compiler host</PackageTags>
    <!-- CopyrightNotice = "Yaaf.FSharp.Scripting Copyright © Matthias Dittrich 2015" -->
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|Net45' ">
    <Optimize>false</Optimize>
    <Tailcalls>false</Tailcalls>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>3</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|Net45' ">
    <Optimize>true</Optimize>
    <Tailcalls>true</Tailcalls>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>3</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|IncludeTest' ">
    <Optimize>false</Optimize>
    <Tailcalls>false</Tailcalls>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>3</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|IncludeTest' ">
    <Optimize>true</Optimize>
    <Tailcalls>true</Tailcalls>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>3</WarningLevel>
  </PropertyGroup>
  <ItemGroup Condition=" '$(Platform)' != 'Netstandard2.0' ">
    <Reference Include="mscorlib" />
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Numerics" />
    <Content Include="app.config" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="..\..\SharedAssemblyInfo.fs">
      <Link>SharedAssemblyInfo.fs</Link>
    </Compile>
    <Compile Include="AssemblyInfo.fs" />
    <Compile Include="YaafFSharpScripting.fs" />
    <None Include="Script.fsx" />
  </ItemGroup>
  <Import Project="..\..\..\.paket\Paket.Restore.targets" />
</Project>